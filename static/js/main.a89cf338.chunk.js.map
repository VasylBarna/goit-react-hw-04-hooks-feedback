{"version":3,"sources":["components/Feedback/Feedback.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","container","map","option","btn","name","type","onClick","Section","title","children","Statistics","good","neutral","bad","total","percente","statistics","list","indicator","positive","propType","PropTypes","number","isRequired","func","Notification","message","Feedback","useState","setGood","setNeutral","setBad","totalFeedback","feedbackChoice","Object","keys","event","prevState","Math","round","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a89cf338.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__3kWN_\"};","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={styles.container}>\n    {options.map(option => (\n      <button\n        className={styles.btn}\n        key={option}\n        name={option}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.scss';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h3 className={styles.title}>{title}</h3>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percente }) => (\r\n  <div className={styles.statistics}>\r\n    <ul className={styles.list}>\r\n      <li>\r\n        Good: <span className={styles.indicator}>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral: <span className={styles.indicator}>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad: <span className={styles.indicator}>{bad}</span>\r\n      </li>\r\n    </ul>\r\n    <p className={styles.total}>\r\n      Total: <span className={styles.indicator}>{total}</span>\r\n    </p>\r\n    <p className={styles.positive}>\r\n      Positive Feedback: <span className={styles.indicator}>{percente}%</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nStatistics.propType = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  percente: PropTypes.func.isRequired,\r\n};\r\nexport default Statistics;\r\n","import styles from './Notification.module.scss';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Statistics from '../Statistics';\nimport Notification from '../Notification';\nimport styles from './Feedback.module.scss';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const setStats = event => {\n    switch (event) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const totalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const positiveFeedbackPercentage = () => {\n    const positive = Math.round((good / totalFeedback()) * 100);\n    return positive;\n  };\n\n  const options = { good, neutral, bad };\n  const feedbackChoice = Object.keys(options);\n\n  return (\n    <div className={styles.container}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={feedbackChoice} onLeaveFeedback={setStats} />\n      </Section>\n      <Section title=\"Statistics\">\n        {good || neutral || bad ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback()}\n            percente={positiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\n// import { Component } from 'react';\n// import FeedbackOptions from '../FeedbackOptions';\n// import Section from '../Section';\n// import Statistics from '../Statistics';\n// import Notification from '../Notification';\n// import styles from './Feedback.module.scss';\n\n// const feedbackChoice = ['good', 'neutral', 'bad'];\n\n// class Feedback extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   onLeaveFeedback = ({ target: { name } }) =>\n//     this.setState({ [name]: this.state[name] + 1 });\n\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     const { good } = this.state;\n//     const total = this.countTotalFeedback();\n//     return Math.round((good / total) * 100);\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const percente = this.countPositiveFeedbackPercentage();\n\n//     return (\n//       <div className={styles.container}>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={feedbackChoice}\n//             onLeaveFeedback={this.onLeaveFeedback}\n//           />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           {total > 0 ? (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               percente={percente}\n//             />\n//           ) : (\n//             <Notification message=\"No feedback given\" />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Feedback;\n","import { Fragment } from 'react';\r\nimport Feedback from './components/Feedback';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Feedback />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport '../node_modules/modern-normalize/modern-normalize.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3WAre\",\"indicator\":\"Statistics_indicator__3IqOl\",\"positive\":\"Statistics_positive__1hvnd\",\"total\":\"Statistics_total__1IPm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__rIba4\",\"btn\":\"FeedbackOptions_btn__1w0uM\",\"button\":\"FeedbackOptions_button__1PRxh\"};"],"sourceRoot":""}